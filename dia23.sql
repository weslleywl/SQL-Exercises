-- 1)mostra a versão e se tem service pack instalado
SELECT @@VERSION
-- 2)mostra os dias da semana
SET DATEFIRST 5
SELECT @@DATEFIRST AS '1st Day', DATEPART(dw, GETDATE()) AS 'Today'
-- 3) mostra o tipo de linguagem
SELECT @@LANGUAGE AS 'Language Name'
-- 4)numero de conexão
select @@MAX_CONNECTIONS
-- 5)
select @@SPID 
--retorna o numero de login, hostname, etc
exec sp_who
-- 
select @@FETCH_STATUS

--criando um sp de armazenamento estrutura de categorias
--------------------------------------------------------------
-- SCRIPT CRIADO POR : MAURO C. PICHILIANI
-- DATE : 20/10/2001
-- STORED PROCEDURE RET_FILHOS() , RET_PAIS() E EXEMPLOS DE USO
--------------------------------------------------------------

-- APAGA A TABELA CATEGORIA , SE JA TIVER SIDO CRIADA
DROP TABLE CATEGORIA

-- CRIA A TABELA
CREATE TABLE CATEGORIA
(
	COD 	INT NOT NULL,
	DESCR 	CHAR(20) NOT NULL,
	COD_PAI INT NULL
)

create view view_catg
as
select cod as patricia, descr from categoria as c
where cod = 1
-- executando a view
SELECT * FROM view_catg

create procedure categ
as
begin
select descr from categoria
where descr = 'vinhos'
end

execute categ

-- APAGA OS DADOS
DELETE CATEGORIA
drop table categoria

-- VERIFICA O QUE TEM DENTRO DA TABELA
SELECT * FROM CATEGORIA

-- INSERE ALGUNS DADOS
INSERT INTO CATEGORIA VALUES(1,'PRINCIPAL',NULL)
INSERT INTO CATEGORIA VALUES(2,'BEBIDAS',1)
INSERT INTO CATEGORIA VALUES(3,'REFIGERANTES',2)
INSERT INTO CATEGORIA VALUES(4,'VINHOS',2)
INSERT INTO CATEGORIA VALUES(5,'CERVEJAS',2)
INSERT INTO CATEGORIA VALUES(6,'ALIMENTOS',1)
INSERT INTO CATEGORIA VALUES(7,'CARNES',6)
INSERT INTO CATEGORIA VALUES(8,'PEIXE',7)
INSERT INTO CATEGORIA VALUES(9,'PORCO',7)
INSERT INTO CATEGORIA VALUES(10,'VACA',7)
INSERT INTO CATEGORIA VALUES(11,'PÃES',6)
INSERT INTO CATEGORIA VALUES(12,'DOCE',11)
INSERT INTO CATEGORIA VALUES(13,'SALGADO',11)
INSERT INTO CATEGORIA VALUES(14,'OUTROS',1)

-- APAGA A PROCEDURE QUE IRÁ RETORNAR OS DADOS COLUNADOS
DROP PROCEDURE RET_FILHOS

-- CRIA A PROCEDURE QUE IRÁ RETORNAR OS DADOS COLUNADOS
CREATE PROCEDURE RET_FILHOS @COD INT  , @ORDEM INT = 1
AS

-- DESABILITA AS MENSAGENS
SET NOCOUNT ON

-- DECLARA AS VARIAVEIS QUE SERAM UTILIZADAS NA STORED PROCEDURE
DECLARE @COD_TAB INT , @DESCR CHAR(20) , @COD_PAI INT , @AUX INT

-- INCREMENTA UMA UNIDADE NO CONTADOR DE COLUNA
declare @ordem int
SELECT @AUX = @ORDEM + 1


-- PRIMEIRO PEGA OS FILHOS 


DECLARE CUR_MEU CURSOR LOCAL
FOR SELECT * FROM CATEGORIA 
WHERE COD_PAI = @COD_TAB

OPEN CUR_MEU 

FETCH NEXT FROM CUR_MEU INTO @COD_TAB , @DESCR , @COD_PAI

-- LE O CURSOR ATE ACABAREM OS FILHOS
WHILE @@FETCH_STATUS <> "-1"
BEGIN
	
        -- VERIFICA SE EXISTE A TABELA #TEMP_01
	IF NOT EXISTS(SELECT * FROM TEMPDB.INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE "%#TB_TEMP%")	
	BEGIN
		-- CRIA A TABELA TEMPORARIA
		CREATE TABLE #TB_TEMP
		(
			COD    INT NOT NULL,
			DESCR CHAR(20) NOT NULL, 
			ORDEM  INT NOT NULL
		)
		
		-- COLOCA O DADO DA RAIZ NA TABELA TEMPORÁRIA
		INSERT INTO #TB_TEMP 
		SELECT COD , DESCR,@AUX-1 FROM CATEGORIA
		WHERE COD = @COD
		
	END
	
	-- INSERE OS DADOS
	INSERT INTO #TB_TEMP VALUES(@COD_TAB,@DESCR,@AUX)
	
	-- FAZ A CHAMADA RECURSIVA
	EXEC RET_FILHOS @COD_TAB , @AUX

	FETCH NEXT FROM CUR_MEU INTO @COD_TAB , @DESCR , @COD_PAI
END

CLOSE CUR_MEU

DEALLOCATE CUR_MEU

-- VERIFICA SE É O TÉRMINO DA PILHA DE CHAMADA DA FUNÇÀO
IF @@NESTLEVEL = 1
BEGIN
	-- VERIFICA SE A TABELA TEMPORARIA ESTA CRIADA
	IF EXISTS(SELECT * FROM TEMPDB.INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE "%#TB_TEMP%")	
	BEGIN

		-- RETORNA OS DADOS
		SELECT COD,DESCR,ORDEM FROM #TB_TEMP
	
		-- APAGA A TABELA TEMPORÁRIA
		DROP TABLE #TB_TEMP
	END
END

-- HABILITA NOVAMENTE AS MENSAGENS
SET NOCOUNT OFF

GO
/* FIM DA STORED PROCEDUT RET_FILHOS */


-- APAGA A PROCEDURE QUE IRÁ RETORNAR AS CATEGORIAS PERCORRIDAS ( PAIS )
DROP PROCEDURE RET_PAIS


-- CRIA A PROCEDURE RET_PAIS 
CREATE PROCEDURE RET_PAIS @COD INT  
AS

-- DESABILITA AS MENSAGENS
SET NOCOUNT ON

-- DECLARA AS VARIAVEIS QUE SERAM UTILIZADAS NA STORED PROCEDURE
DECLARE @COD_TAB INT , @DESCR CHAR(20) , @COD_PAI INT 

-- VERIFICA SE EXISTE A TABELA #TB_PAI
IF NOT EXISTS(SELECT * FROM TEMPDB.INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE "%#TB_PAI%")	
BEGIN
	-- CRIA A TABELA TEMPORARIA
	CREATE TABLE #TB_PAI
	(
		COD    INT NOT NULL,
		DESCR CHAR(20) NOT NULL, 
		COD_PAI  INT NULL ,
		ORDEM INT IDENTITY(1,1)
	)
END

-- AQUI OBTENHO OS DADOS DO PAI DO PARÂMETRO PASSADO
SELECT 	@COD_TAB = COD , @DESCR = DESCR , @COD_PAI = COD_PAI 
FROM CATEGORIA 
WHERE COD_PAI = ( SELECT COD_PAI FROM CATEGORIA WHERE COD =  @COD )

-- VERIFICO QUE CHEGOU NA CATEGORIA PRINCIPAL: O CODIGO É NULL
IF @COD_PAI IS NOT NULL
BEGIN
	-- INSERE OS DADOS NA TABELA TEMPORÁRIA
	INSERT INTO #TB_PAI VALUES(@COD,@DESCR,@COD_PAI)	

	-- FAÇO A CHAMADA RECURSIVA DA RET_PAIS
	EXEC RET_PAIS @COD_PAI
END

-- VERIFICA SE É O TÉRMINO DA PILHA DE CHAMADA DA FUNÇÀO
IF @@NESTLEVEL = 1
BEGIN
	-- VERIFICA SE A TABELA TEMPORARIA TB_PAIS ESTA CRIADA
	IF EXISTS(SELECT * FROM TEMPDB.INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE "%#TB_PAI%")	
	BEGIN

		-- INSIRO O CODIGO DA RAIZ
		INSERT INTO #TB_PAI 
		SELECT COD , DESCR, COD_PAI  FROM CATEGORIA
		WHERE COD_PAI IS NULL

		-- AGORA PRECISO INVERTER A ORDEM PARA RETORNAR OS DADOS
                -- FAÇO ISTO UTILIZANDO A COLUNA QUE É IDENTITY()

                -- RETORNA OS DADOS
		SELECT COD,DESCR,COD_PAI FROM #TB_PAI
		ORDER BY ORDEM DESC
	
		-- APAGA A TABELA TEMPORÁRIA
		DROP TABLE #TB_PAI
	END
END

-- HABILITA NOVAMENTE AS MENSAGENS
SET NOCOUNT OFF

GO
/* FIM DA STORED PROCEDUT RET_PAIS */



----------------------------------------------------------------------------------
-- EXEMPLOS DE USO DA RE_FILHOS E DA RET_PAIS
----------------------------------------------------------------------------------


-- EXECUTA RET_FILHOS PASSANDO O CODIGO DO NÓ PRINCIPAL E ASSUMINDO A PRIMEIRA COLUNA COMO 1
EXEC RET_FILHOS 1


-- EXECUTA RET_FILHOS PASSANDO O CODIGO DO NÓ PRINCIPAL E COLOCANDO COMO 10 A PRIMEIRA COLUNA
EXEC RET_FILHOS 6 , 10


-- PEGAS TODAS AS CATEGORIAS IMEDIATAMENTE SUPERIORES À CATEGORIA CÓDIGO 5
EXEC RET_PAIS 5


-- PEGAS TODAS AS CATEGORIAS IMEDIATAMENTE SUPERIORES À CATEGORIA CÓDIGO 5-- 
EXEC RET_PAIS 13

-- PEGAS TODAS AS CATEGORIAS IMEDIATAMENTE SUPERIORES À CATEGORIA CÓDIGO 5
EXEC RET_PAIS 1

select @@CONNECTIONS
-- monitora todo o sistema
exec sp_monitor 



