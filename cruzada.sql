-- criando uma query de referencia cruzada
Abaixo tem um exemplo desse seus dados transformados:

/*VERIFICA SE EXISTE A TABELA*/
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CONTAS]') and OBJECTPROPERTY(id, N'IsTable') = 1)
/*DELETAR SE EXISTIR*/
DROP TABLE CONTAS
GO
/*CRIAR A TABELA */
CREATE TABLE CONTAS(CLIENTE CHAR(10),DATA CHAR(10), QTDE NUMERIC(9) )
GO
/*INSERE OS DADOS DE TESTE*/
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('DANIEL','2006-06-01',1000.0)
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('DANIEL','2006-06-02',2000.0)
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('DANIEL','2006-06-03',3000.0)
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('DANIEL','2006-06-04',10000.0)
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('TEIXEIRA','2006-06-01',12000.0)
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('TEIXEIRA','2006-06-02',32000.0)
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('TEIXEIRA','2006-06-03',35000.0)
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('TEIXEIRA','2006-06-04',12500.0)
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('BI','2006-06-01',12000.0)
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('BI','2006-06-02',32000.0)
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('BI','2006-06-03',10000.0)
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('BI','2006-06-04',10000.0)
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('COCA-COLA','2006-06-01',4000.0) 
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('COCA-COLA','2006-06-02',6300.0)
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('COCA-COLA','2006-06-03',2000.0)
INSERT CONTAS (Cliente, Data, Qtde) VALUES ('COCA-COLA','2006-06-04',2000.0)

/*VERIFICA SE A TABELA 2 ESTA CRIADA ESTIVER DELETA SENÃO CRIA*/
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CONTAS2]') and OBJECTPROPERTY(id, N'IsTable') = 1)
/*DELETAR SE EXISTIR*/
DROP TABLE CONTAS2
GO
/*CRIAR TABELA*/
CREATE TABLE CONTAS2 (CLIENTE VARCHAR(50) NOT NULL)
GO 
/*SELECIONA OS CLIENTES DISTINTAMENTE*/  
INSERT INTO CONTAS2 (CLIENTE)
    SELECT DISTINCT(CLIENTE) FROM CONTAS
/*CURSOR COM A LOGICA*/

-- VARIAVEIS DAS COLUNAS
DECLARE @CABECALHO nvarchar(50)
-- VARIAVEIS COM A CONSULTA DO TEMPO
DECLARE @EXECUTARSQL1 nvarchar(1024)
DECLARE @EXECUTARSQL2 nvarchar(1024)
-- DELARAR O CURSOR
DECLARE VARRE CURSOR FOR 
  SELECT DISTINCT DATA FROM CONTAS
  -- Abrir cursor
  OPEN VARRE
  FETCH NEXT FROM VARRE INTO @CABECALHO
  WHILE @@FETCH_STATUS = 0
    BEGIN
     SET @EXECUTARSQL1 = 'ALTER TABLE CONTAS2 ADD [' + @CABECALHO + '] NUMERIC NULL '
     EXECUTE (@EXECUTARSQL1) 

     -- Atualizar as Colunas
     SET @EXECUTARSQL2 = 'UPDATE CONTAS2 SET [' + @CABECALHO + '] = A.QTDE ' +
     ' FROM CONTAS A INNER JOIN CONTAS2 B ON A.cliente=B.cliente ' +
     ' WHERE A.DATA=''' + @CABECALHO + ''''

     EXECUTE (@EXECUTARSQL2)

    -- PROXIMO REGISTRO
    FETCH NEXT FROM VARRE INTO @CABECALHO
    END
-- FECHAR A LIBERAR A MEMORIA
CLOSE VARRE
DEALLOCATE VARRE 


/*FAZENDO UM VALOR DE TOTAL*/
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[CONTAS3]')and OBJECTPROPERTY(id, N'IsTable') = 1)
/*DELETA SE EXISTIR*/
DROP TABLE CONTAS3
GO
/*CRIAR TABELA*/
CREATE TABLE CONTAS3 (CLIENTE VARCHAR(50) NOT NULL, TOTAL NUMERIC NULL)
GO

/*INSERIR CLIENTES E TOTAIS*/
INSERT INTO CONTAS3 (CLIENTE, TOTAL)
  SELECT CLIENTE, SUM(QTDE) FROM CONTAS GROUP BY CLIENTE

/*ADICIONANDO A COLUNA DE TOTAIS A TABELA CONTAS2*/
ALTER TABLE CONTAS2 ADD TOTAL NUMERIC NULL

/*ATUALIZAR TOTAIS*/
DECLARE @EXECUTASQL nvarchar(1024)
SET @EXECUTASQL ='UPDATE CONTAS2 SET TOTAL= B.total ' + 
    ' FROM CONTAS2 A INNER JOIN CONTAS3 B ON A.cliente=B.cliente'
EXECUTE (@EXECUTASQL) 

/*SELECIONAR OS VALORES FINAIS EM COLUNAS*/
SELECT* FROM CONTAS2

